//+------------------------------------------------------------------+
//|                                                   TradePanel.mq4 |
//|                                  Copyright 2024, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2024, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"
#property strict

#include "\\Include\\Components.mqh"
double bidPrice = 0;
double askPrice = 0;

bool bidLine = false;
bool askLine = false;

bool buy = false;
bool sell = false;
bool buyPending = false;
bool sellPending = false;

string riskType = "";
string riskPercentType = "";
//+------------------------------------------------------------------+
//| Expert initialization function                                   |
//+------------------------------------------------------------------+
int OnInit()
  {
   panel();
   bidPrice = SymbolInfoDouble(_Symbol,SYMBOL_BID);
   askPrice = SymbolInfoDouble(_Symbol,SYMBOL_ASK);

   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {
   ObjectDelete(0,"buttonBuyObjTp");
   ObjectDelete(0,"buttonBuyObjSl");
   ObjectDelete(0,"buttonBuyObj");

   ObjectDelete(0,"buttonSellObj");
   ObjectDelete(0,"buttonSellObjTp");
   ObjectDelete(0,"buttonSellObjSl");

   ObjectDelete(0,"buttonBuyPendingObj");
   ObjectDelete(0,"buttonBuyPendingObjSl");
   ObjectDelete(0,"buttonBuyPendingObjTp");

   ObjectDelete(0,"buttonSellPendingObj");
   ObjectDelete(0,"buttonSellPendingObjSl");
   ObjectDelete(0,"buttonSellPendingObjTp");

   interfacePanel.Destroy(reason);
  }
//+------------------------------------------------------------------+
//| Expert tick function                                             |
//+------------------------------------------------------------------+
void OnTick()
  {
   if(bidLine)
     {
      if(bidPrice > SymbolInfoDouble(_Symbol,SYMBOL_BID) || bidPrice < SymbolInfoDouble(_Symbol,SYMBOL_BID))
        {
         ObjectDelete(0,"buttonBuyObj");
         ObjectCreate(0,"buttonBuyObj",OBJ_HLINE,0,0,SymbolInfoDouble(_Symbol,SYMBOL_BID));
         ObjectSetInteger(0,"buttonBuyObj",OBJPROP_COLOR,clrWhite);
         ObjectSetInteger(0,"buttonBuyObj",OBJPROP_WIDTH,5);
         ObjectSetInteger(0,"buttonBuyObj",OBJPROP_BACK,true);
        }
     }

   if(askLine)
     {
      if(askLine > SymbolInfoDouble(_Symbol,SYMBOL_BID) || askLine < SymbolInfoDouble(_Symbol,SYMBOL_BID))
        {
         ObjectDelete(0,"buttonSellObj");
         ObjectCreate(0,"buttonSellObj",OBJ_HLINE,0,0,SymbolInfoDouble(_Symbol,SYMBOL_ASK));
         ObjectSetInteger(0,"buttonSellObj",OBJPROP_COLOR,clrWhite);
         ObjectSetInteger(0,"buttonSellObj",OBJPROP_WIDTH,5);
         ObjectSetInteger(0,"buttonSellObj",OBJPROP_BACK,true);
        }
     }
  }
//+------------------------------------------------------------------+
//| ChartEvent function                                              |
//+------------------------------------------------------------------+
void OnChartEvent(const int id,
                  const long &lparam,
                  const double &dparam,
                  const string &sparam)
  {
   interfacePanel.OnEvent(id,lparam,dparam,sparam);
//---RADIO GROUP CLICK
   if(id == CHARTEVENT_OBJECT_CLICK && (sparam == "radioGroupRiskItem0Button" || sparam == "radioGroupRiskItem0Label"))
     {
      labelSymbolRisk.Text("$");
      radioGroupRiskPercent.Hide();

      riskType = "MONEY";
      editRisk.Text("0.50");
     }
   if(id == CHARTEVENT_OBJECT_CLICK && (sparam == "radioGroupRiskItem1Button" || sparam == "radioGroupRiskItem1Label"))
     {
      labelSymbolRisk.Text("%");
      radioGroupRiskPercent.Show();

      riskType = "PERCENT";
      editRisk.Text("0.10");
     }
   if(id == CHARTEVENT_OBJECT_CLICK && (sparam == "radioGroupRiskItem2Button" || sparam == "radioGroupRiskItem2Label"))
     {
      labelSymbolRisk.Text("Lot");
      radioGroupRiskPercent.Hide();

      riskType = "LOTS";
      editRisk.Text("0.01");
     }

   if(id == CHARTEVENT_OBJECT_CLICK && (sparam == "radioGroupRiskPercentItem0Button" || sparam == "radioGroupRiskPercentItem0Label"))
     {
      riskPercentType = "BALANCE";
     }
   if(id == CHARTEVENT_OBJECT_CLICK && (sparam == "radioGroupRiskPercentItem1Button" || sparam == "radioGroupRiskPercentItem1Label"))
     {
      riskPercentType = "EQUITY";
     }
   if(id == CHARTEVENT_OBJECT_CLICK && (sparam == "radioGroupRiskPercentItem2Button" || sparam == "radioGroupRiskPercentItem2Label"))
     {
      riskPercentType = "FREEMARGIN";
     }
//---BUTTON CLICK
//---//---BUTTON BUY
   if(id == CHARTEVENT_OBJECT_CLICK && sparam == "buttonBuy")
     {
      buttonBuy.ColorBackground(clrGold);
      buttonSell.ColorBackground(clrLightPink);
      buttonBuyPending.ColorBackground(clrLightGreen);
      buttonSellPending.ColorBackground(clrLightPink);

      ObjectDelete(0,"buttonBuyObjTp");
      ObjectDelete(0,"buttonBuyObjSl");
      ObjectDelete(0,"buttonBuyObj");

      ObjectDelete(0,"buttonSellObj");
      ObjectDelete(0,"buttonSellObjTp");
      ObjectDelete(0,"buttonSellObjSl");

      ObjectDelete(0,"buttonBuyPendingObj");
      ObjectDelete(0,"buttonBuyPendingObjSl");
      ObjectDelete(0,"buttonBuyPendingObjTp");

      ObjectDelete(0,"buttonSellPendingObj");
      ObjectDelete(0,"buttonSellPendingObjSl");
      ObjectDelete(0,"buttonSellPendingObjTp");

      bidLine = true;
      askLine = false;

      ObjectCreate(0,"buttonBuyObj",OBJ_HLINE,0,0,SymbolInfoDouble(_Symbol,SYMBOL_BID));
      ObjectSetInteger(0,"buttonBuyObj",OBJPROP_COLOR,clrWhite);
      ObjectSetInteger(0,"buttonBuyObj",OBJPROP_WIDTH,5);
      ObjectSetInteger(0,"buttonBuyObj",OBJPROP_BACK,true);

      ObjectCreate(0,"buttonBuyObjSl",OBJ_HLINE,0,0,SymbolInfoDouble(_Symbol,SYMBOL_BID)-200*_Point);
      ObjectSetInteger(0,"buttonBuyObjSl",OBJPROP_COLOR,clrRed);
      ObjectSetInteger(0,"buttonBuyObjSl",OBJPROP_WIDTH,5);
      ObjectSetInteger(0,"buttonBuyObjSl",OBJPROP_BACK,true);
      ObjectSetInteger(0,"buttonBuyObjSl",OBJPROP_SELECTED,true);

      ObjectCreate(0,"buttonBuyObjTp",OBJ_HLINE,0,0,SymbolInfoDouble(_Symbol,SYMBOL_BID)+200*_Point);
      ObjectSetInteger(0,"buttonBuyObjTp",OBJPROP_COLOR,clrGreen);
      ObjectSetInteger(0,"buttonBuyObjTp",OBJPROP_WIDTH,5);
      ObjectSetInteger(0,"buttonBuyObjTp",OBJPROP_BACK,true);
      ObjectSetInteger(0,"buttonBuyObjTp",OBJPROP_SELECTED,true);

      buy = true;
      sell = false;
      buyPending = false;
      sellPending = false;
     }
//---//---BUTTON SELL
   if(id == CHARTEVENT_OBJECT_CLICK && sparam == "buttonSell")
     {
      buttonBuy.ColorBackground(clrLightGreen);
      buttonSell.ColorBackground(clrGold);
      buttonBuyPending.ColorBackground(clrLightGreen);
      buttonSellPending.ColorBackground(clrLightPink);

      ObjectDelete(0,"buttonBuyObjTp");
      ObjectDelete(0,"buttonBuyObjSl");
      ObjectDelete(0,"buttonBuyObj");

      ObjectDelete(0,"buttonSellObj");
      ObjectDelete(0,"buttonSellObjTp");
      ObjectDelete(0,"buttonSellObjSl");

      ObjectDelete(0,"buttonBuyPendingObj");
      ObjectDelete(0,"buttonBuyPendingObjSl");
      ObjectDelete(0,"buttonBuyPendingObjTp");

      ObjectDelete(0,"buttonSellPendingObj");
      ObjectDelete(0,"buttonSellPendingObjSl");
      ObjectDelete(0,"buttonSellPendingObjTp");

      bidLine = false;
      askLine = true;

      ObjectCreate(0,"buttonSellObj",OBJ_HLINE,0,0,SymbolInfoDouble(_Symbol,SYMBOL_ASK));
      ObjectSetInteger(0,"buttonSellObj",OBJPROP_COLOR,clrWhite);
      ObjectSetInteger(0,"buttonSellObj",OBJPROP_WIDTH,5);
      ObjectSetInteger(0,"buttonSellObj",OBJPROP_BACK,true);

      ObjectCreate(0,"buttonSellObjSl",OBJ_HLINE,0,0,SymbolInfoDouble(_Symbol,SYMBOL_BID)+200*_Point);
      ObjectSetInteger(0,"buttonSellObjSl",OBJPROP_COLOR,clrRed);
      ObjectSetInteger(0,"buttonSellObjSl",OBJPROP_WIDTH,5);
      ObjectSetInteger(0,"buttonSellObjSl",OBJPROP_BACK,true);
      ObjectSetInteger(0,"buttonSellObjSl",OBJPROP_SELECTED,true);

      ObjectCreate(0,"buttonSellObjTp",OBJ_HLINE,0,0,SymbolInfoDouble(_Symbol,SYMBOL_BID)-200*_Point);
      ObjectSetInteger(0,"buttonSellObjTp",OBJPROP_COLOR,clrGreen);
      ObjectSetInteger(0,"buttonSellObjTp",OBJPROP_WIDTH,5);
      ObjectSetInteger(0,"buttonSellObjTp",OBJPROP_BACK,true);
      ObjectSetInteger(0,"buttonSellObjTp",OBJPROP_SELECTED,true);

      buy = false;
      sell = true;
      buyPending = false;
      sellPending = false;
     }
//---//---BUTTON BUY PENDING
   if(id == CHARTEVENT_OBJECT_CLICK && sparam == "buttonBuyPending")
     {
      buttonBuy.ColorBackground(clrLightGreen);
      buttonSell.ColorBackground(clrLightPink);
      buttonBuyPending.ColorBackground(clrGold);
      buttonSellPending.ColorBackground(clrLightPink);

      ObjectDelete(0,"buttonBuyObjTp");
      ObjectDelete(0,"buttonBuyObjSl");
      ObjectDelete(0,"buttonBuyObj");

      ObjectDelete(0,"buttonSellObj");
      ObjectDelete(0,"buttonSellObjTp");
      ObjectDelete(0,"buttonSellObjSl");

      ObjectDelete(0,"buttonBuyPendingObj");
      ObjectDelete(0,"buttonBuyPendingObjSl");
      ObjectDelete(0,"buttonBuyPendingObjTp");

      ObjectDelete(0,"buttonSellPendingObj");
      ObjectDelete(0,"buttonSellPendingObjSl");
      ObjectDelete(0,"buttonSellPendingObjTp");

      bidLine = false;
      askLine = false;

      ObjectCreate(0,"buttonBuyPendingObj",OBJ_HLINE,0,0,SymbolInfoDouble(_Symbol,SYMBOL_BID));
      ObjectSetInteger(0,"buttonBuyPendingObj",OBJPROP_COLOR,clrWhite);
      ObjectSetInteger(0,"buttonBuyPendingObj",OBJPROP_WIDTH,5);
      ObjectSetInteger(0,"buttonBuyPendingObj",OBJPROP_BACK,true);
      ObjectSetInteger(0,"buttonBuyPendingObj",OBJPROP_SELECTED,true);

      ObjectCreate(0,"buttonBuyPendingObjSl",OBJ_HLINE,0,0,SymbolInfoDouble(_Symbol,SYMBOL_BID)-200*_Point);
      ObjectSetInteger(0,"buttonBuyPendingObjSl",OBJPROP_COLOR,clrRed);
      ObjectSetInteger(0,"buttonBuyPendingObjSl",OBJPROP_WIDTH,5);
      ObjectSetInteger(0,"buttonBuyPendingObjSl",OBJPROP_BACK,true);
      ObjectSetInteger(0,"buttonBuyPendingObjSl",OBJPROP_SELECTED,true);

      ObjectCreate(0,"buttonBuyPendingObjTp",OBJ_HLINE,0,0,SymbolInfoDouble(_Symbol,SYMBOL_BID)+200*_Point);
      ObjectSetInteger(0,"buttonBuyPendingObjTp",OBJPROP_COLOR,clrGreen);
      ObjectSetInteger(0,"buttonBuyPendingObjTp",OBJPROP_WIDTH,5);
      ObjectSetInteger(0,"buttonBuyPendingObjTp",OBJPROP_BACK,true);
      ObjectSetInteger(0,"buttonBuyPendingObjTp",OBJPROP_SELECTED,true);

      buy = false;
      sell = false;
      buyPending = true;
      sellPending = false;
     }
//---//---BUTTON SELL PENDING
   if(id == CHARTEVENT_OBJECT_CLICK && sparam == "buttonSellPending")
     {
      buttonBuy.ColorBackground(clrLightGreen);
      buttonSell.ColorBackground(clrLightPink);
      buttonBuyPending.ColorBackground(clrLightGreen);
      buttonSellPending.ColorBackground(clrGold);

      ObjectDelete(0,"buttonBuyObjTp");
      ObjectDelete(0,"buttonBuyObjSl");
      ObjectDelete(0,"buttonBuyObj");

      ObjectDelete(0,"buttonSellObj");
      ObjectDelete(0,"buttonSellObjTp");
      ObjectDelete(0,"buttonSellObjSl");

      ObjectDelete(0,"buttonBuyPendingObj");
      ObjectDelete(0,"buttonBuyPendingObjSl");
      ObjectDelete(0,"buttonBuyPendingObjTp");

      ObjectDelete(0,"buttonSellPendingObj");
      ObjectDelete(0,"buttonSellPendingObjSl");
      ObjectDelete(0,"buttonSellPendingObjTp");

      bidLine = false;
      askLine = false;

      ObjectCreate(0,"buttonSellPendingObj",OBJ_HLINE,0,0,SymbolInfoDouble(_Symbol,SYMBOL_ASK));
      ObjectSetInteger(0,"buttonSellPendingObj",OBJPROP_COLOR,clrWhite);
      ObjectSetInteger(0,"buttonSellPendingObj",OBJPROP_WIDTH,5);
      ObjectSetInteger(0,"buttonSellPendingObj",OBJPROP_BACK,true);
      ObjectSetInteger(0,"buttonSellPendingObj",OBJPROP_SELECTED,true);

      ObjectCreate(0,"buttonSellPendingObjSl",OBJ_HLINE,0,0,SymbolInfoDouble(_Symbol,SYMBOL_BID)+200*_Point);
      ObjectSetInteger(0,"buttonSellPendingObjSl",OBJPROP_COLOR,clrRed);
      ObjectSetInteger(0,"buttonSellPendingObjSl",OBJPROP_WIDTH,5);
      ObjectSetInteger(0,"buttonSellPendingObjSl",OBJPROP_BACK,true);
      ObjectSetInteger(0,"buttonSellPendingObjSl",OBJPROP_SELECTED,true);

      ObjectCreate(0,"buttonSellPendingObjTp",OBJ_HLINE,0,0,SymbolInfoDouble(_Symbol,SYMBOL_BID)-200*_Point);
      ObjectSetInteger(0,"buttonSellPendingObjTp",OBJPROP_COLOR,clrGreen);
      ObjectSetInteger(0,"buttonSellPendingObjTp",OBJPROP_WIDTH,5);
      ObjectSetInteger(0,"buttonSellPendingObjTp",OBJPROP_BACK,true);
      ObjectSetInteger(0,"buttonSellPendingObjTp",OBJPROP_SELECTED,true);

      buy = false;
      sell = false;
      buyPending = false;
      sellPending = true;
     }
//---//---BUTTON CANCLE
   if(id == CHARTEVENT_OBJECT_CLICK && sparam == "buttonCancle")
     {
      buttonBuy.ColorBackground(clrLightGreen);
      buttonSell.ColorBackground(clrLightPink);
      buttonBuyPending.ColorBackground(clrLightGreen);
      buttonSellPending.ColorBackground(clrLightPink);

      ObjectDelete(0,"buttonBuyObjTp");
      ObjectDelete(0,"buttonBuyObjSl");
      ObjectDelete(0,"buttonBuyObj");

      ObjectDelete(0,"buttonSellObj");
      ObjectDelete(0,"buttonSellObjTp");
      ObjectDelete(0,"buttonSellObjSl");

      ObjectDelete(0,"buttonBuyPendingObj");
      ObjectDelete(0,"buttonBuyPendingObjSl");
      ObjectDelete(0,"buttonBuyPendingObjTp");

      ObjectDelete(0,"buttonSellPendingObj");
      ObjectDelete(0,"buttonSellPendingObjSl");
      ObjectDelete(0,"buttonSellPendingObjTp");

      bidLine = false;
      askLine = false;

      buy = false;
      sell = false;
      buyPending = false;
      sellPending = false;
     }
//---//---BUTTON SET
   if(id == CHARTEVENT_OBJECT_CLICK && sparam == "buttonSet")
     {
      if(buy)
        {
         double price = SymbolInfoDouble(_Symbol,SYMBOL_BID);
         double tp = ObjectGetDouble(0,"buttonBuyObjTp",OBJPROP_PRICE,0);
         double sl = ObjectGetDouble(0,"buttonBuyObjSl",OBJPROP_PRICE,0);

         if(!OrderSend(_Symbol,OP_BUY,(double)editRisk.Text(),price,0,sl,tp))
            Print("Can Not Open Position");
        }
      if(sell)
        {
         double price = SymbolInfoDouble(_Symbol,SYMBOL_ASK);
         double tp = ObjectGetDouble(0,"buttonSellObjTp",OBJPROP_PRICE,0);
         double sl = ObjectGetDouble(0,"buttonSellObjSl",OBJPROP_PRICE,0);

         if(!OrderSend(_Symbol,OP_SELL,(double)editRisk.Text(),price,0,sl,tp))
            Print("Can Not Open Position");
        }
      if(buyPending)
        {
         double price = ObjectGetDouble(0,"buttonBuyPendingObj",OBJPROP_PRICE,0);
         double tp = ObjectGetDouble(0,"buttonBuyPendingObjTp",OBJPROP_PRICE,0);
         double sl = ObjectGetDouble(0,"buttonBuyPendingObjSl",OBJPROP_PRICE,0);

         if(price > SymbolInfoDouble(_Symbol,SYMBOL_BID))
           {
            if(!OrderSend(_Symbol,OP_BUYSTOP,(double)editRisk.Text(),price,0,sl,tp))
               Print("Can Not Open Position");
           }
         else
            if(price < SymbolInfoDouble(_Symbol,SYMBOL_BID))
              {
               if(!OrderSend(_Symbol,OP_BUYLIMIT,(double)editRisk.Text(),price,0,sl,tp))
                  Print("Can Not Open Position");
              }
        }
      if(sellPending)
        {
         double price = ObjectGetDouble(0,"buttonSellPendingObj",OBJPROP_PRICE,0);
         double tp = ObjectGetDouble(0,"buttonSellPendingObjTp",OBJPROP_PRICE,0);
         double sl = ObjectGetDouble(0,"buttonSellPendingObjSl",OBJPROP_PRICE,0);

         if(price > SymbolInfoDouble(_Symbol,SYMBOL_BID))
           {
            if(!OrderSend(_Symbol,OP_SELLLIMIT,(double)editRisk.Text(),price,0,sl,tp))
               Print("Can Not Open Position");
           }
         else
            if(price < SymbolInfoDouble(_Symbol,SYMBOL_BID))
              {
               if(!OrderSend(_Symbol,OP_SELLSTOP,(double)editRisk.Text(),price,0,sl,tp))
                  Print("Can Not Open Position");
              }
        }
     }
//---//---BMP Button Risk
   double minLot = SymbolInfoDouble(_Symbol,SYMBOL_VOLUME_MIN);
   double maxLot = SymbolInfoDouble(_Symbol,SYMBOL_VOLUME_MAX);
   double lotStep = SymbolInfoDouble(_Symbol,SYMBOL_VOLUME_STEP);
   double lotEditBox = 0.0;

   if(id == CHARTEVENT_OBJECT_CLICK && sparam == "bmpButtonRiskPlus")
     {
      if(riskType == "LOTS")
        {
         lotEditBox = (double)editRisk.Text();
         lotEditBox = (lotEditBox += lotStep) > maxLot ? maxLot : lotEditBox;
         editRisk.Text(DoubleToString(lotEditBox,2));
        }
      else
         if(riskType == "MONEY")
           {
            lotEditBox = (double)editRisk.Text();
            lotEditBox = (lotEditBox += 0.5) > 100 ? 100 : lotEditBox;
            editRisk.Text(DoubleToString(lotEditBox,2));
           }
         else
            if(riskType == "PERCENT")
              {
               lotEditBox = (double)editRisk.Text();
               lotEditBox = (lotEditBox += 0.1) > 10 ? 10 : lotEditBox;
               editRisk.Text(DoubleToString(lotEditBox,2));
              }
     }
   if(id == CHARTEVENT_OBJECT_CLICK && sparam == "bmpButtonRiskMinus")
     {
      if(riskType == "LOTS")
        {
         lotEditBox = (double)editRisk.Text();
         lotEditBox = (lotEditBox -= lotStep) < minLot ? minLot : lotEditBox;
         editRisk.Text(DoubleToString(lotEditBox,2));
        }
      else
         if(riskType == "MONEY")
           {
            lotEditBox = (double)editRisk.Text();
            lotEditBox = (lotEditBox -= 0.5) < 0.5 ? 0.5 : lotEditBox;
            editRisk.Text(DoubleToString(lotEditBox,2));
           }
         else
            if(riskType == "PERCENT")
              {
               lotEditBox = (double)editRisk.Text();
               lotEditBox = (lotEditBox -= 0.1) < 0.1 ? 0.1 : lotEditBox;
               editRisk.Text(DoubleToString(lotEditBox,2));
              }
     }
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
double lotSizeCalce()
  {
//---only use for forex pairs
//---stoploss should be in points
   double tickSize = SymbolInfoDouble(_Symbol,SYMBOL_TRADE_TICK_SIZE);
   double tickValue = SymbolInfoDouble(_Symbol,SYMBOL_TRADE_TICK_VALUE);
   double lotStep = SymbolInfoDouble(_Symbol,SYMBOL_VOLUME_STEP);
   double minLot = SymbolInfoDouble(_Symbol,SYMBOL_VOLUME_MIN);
   double maxLot = SymbolInfoDouble(_Symbol,SYMBOL_VOLUME_MAX);
   double accountSize = 0;
   double lotSize = 0;

   if(tickSize == 0 || tickValue == 0 || lotStep == 0)
      return -1;
//---LOT SIZE FIX
   if(riskType == "LOTS")
     {
      if((double)editRisk.Text() <= 0)
        {
         lotSize = minLot;
        }
      else
         if((double)editRisk.Text() > maxLot)
           {
            lotSize = maxLot;
           }
      //---
      return lotSize;
     }
//---MONEY FIX
   if(riskType == "MONEY")
     {
      lotSize = ((double)editRisk.Text()/stopLossCalc()*1.0)/tickValue;
      lotSize = NormalizeDouble(lotSize,2);
      if(lotSize <= 0)
        {
         lotSize = minLot;
        }
      else
         if(lotSize > maxLot)
           {
            lotSize = maxLot;
           }
      //---
      return lotSize;
     }
//---ACCOUNT PERCENT
   if(riskType == "PERCENT" && riskPercentType == "FREEMARGIN")
     {
      accountSize = AccountInfoDouble(ACCOUNT_MARGIN_FREE);
     }
   else
      if(riskType == "PERCENT" && riskPercentType == "EQUITY")
        {
         accountSize = AccountInfoDouble(ACCOUNT_EQUITY);
        }
      else
         if(riskType == "PERCENT" && riskPercentType == "BALANCE")
           {
            accountSize = AccountInfoDouble(ACCOUNT_BALANCE);
           }

   double riskMoney = accountSize*((double)editRisk.Text()/100);
   lotSize = (riskMoney/stopLossCalc()*1.0)/tickValue;
   lotSize = NormalizeDouble(lotSize,2);
   if(lotSize <= 0)
     {
      lotSize = minLot;
     }
   else
      if(lotSize > maxLot)
        {
         lotSize = maxLot;
        }
//---
   return lotSize;
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
double stopLossCalc()
  {
   double stopLoss = 0.0;
   if(buy)
     {
      stopLoss = SymbolInfoDouble(_Symbol,SYMBOL_BID) - ObjectGetDouble(0,"buttonBuyObjSl",OBJPROP_PRICE,0);
      stopLoss = NormalizeDouble(stopLoss,_Digits);
      return stopLoss;
     }
   else
      if(sell)
        {
         stopLoss = ObjectGetDouble(0,"buttonSellObjSl",OBJPROP_PRICE,0) - SymbolInfoDouble(_Symbol,SYMBOL_ASK);
         stopLoss = NormalizeDouble(stopLoss,_Digits);
         return stopLoss;
        }
      else
         if(buyPending)
           {
            double price = ObjectGetDouble(0,"buttonBuyPendingObj",OBJPROP_PRICE,0);
            double sl = ObjectGetDouble(0,"buttonBuyPendingObjSl",OBJPROP_PRICE,0);
            stopLoss = price - sl;
            stopLoss = NormalizeDouble(stopLoss,_Digits);
            return stopLoss;
           }
         else
            if(sellPending)
              {
               double price = ObjectGetDouble(0,"buttonSellPendingObj",OBJPROP_PRICE,0);
               double sl = ObjectGetDouble(0,"buttonSellPendingObjSl",OBJPROP_PRICE,0);
               stopLoss = sl - price;
               stopLoss = NormalizeDouble(stopLoss,_Digits);
               return stopLoss;
              }
            else
              {
               return 0;
              }
   return 0;
  }
//+------------------------------------------------------------------+
